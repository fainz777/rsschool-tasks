!function(t){var e={};function s(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(i,o,function(e){return t[e]}.bind(null,o));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);s(1);class i{static getColor(t){if("string"==typeof t)return`#${t}`;let e=[...t];try{e[3]=4===e.length?(e[3]/255).toFixed(2):1,e=`rgba(${e.join(",")})`}catch(t){return"#000"}return e}static showMessage(t){alert(t)}}class o{constructor(t){t?(this.canvasId=t,this.canvas=document.getElementById(this.canvasId),this.canvas?(this.width=this.canvas.width,this.height=this.canvas.height,this.ctx=this.canvas.getContext("2d"),this.pixels=4,this.currenColorField=document.getElementById("current_color"),this.currentColorIcon=document.querySelector(".icon_color--current-color"),this.prevColorIcon=document.querySelector(".icon_color--prev_color"),this.currentColor=window.getComputedStyle(this.currentColorIcon).backgroundColor,this.currentTool=null,this.isPencilDrawStart=!1,this.pencilX=0,this.pencilY=0,this.toolsActions={paintBucket:"fillArea",pencil:"drawByPencil",colorPicker:"chooseColor"},this.keyBindingsCodes=["KeyB","KeyP","KeyC"],this.keyBindingsTools={KeyB:"paintBucket",KeyC:"colorPicker",KeyP:"pencil"},this.eventsTypes={mousedown:"mousedown",mouseup:"mouseup",mousemove:"mousemove"}):i.showMessage(`Error: canvas element with id ${t} was not found.`)):i.showMessage("Error: canvasId is not set.")}get pixelSize(){return this.width/this.pixels}setEvents(){this.canvasTools=document.querySelectorAll("[data-action]"),this.colorChangeElems=document.querySelectorAll(".item--color_change");const t=document.querySelectorAll(".canvas_change");document.addEventListener("keyup",this.manageKeyBindings.bind(this)),this.canvasTools.forEach(t=>{const{action:e}=t.dataset;t.addEventListener("click",this[e].bind(this,t))}),this.canvas.addEventListener("mousedown",this.manageCanvasActions.bind(this)),this.canvas.addEventListener("mouseup",this.manageCanvasActions.bind(this)),this.canvas.addEventListener("mousemove",this.manageCanvasActions.bind(this)),this.currenColorField.addEventListener("change",this.changeCurrentColor.bind(this)),this.colorChangeElems.forEach(t=>{t.addEventListener("click",this.setCurrentColor.bind(this,t))}),t.forEach(t=>{t.classList.contains("active")&&this.changeCanvasSize.bind(t),t.addEventListener("click",this.changeCanvasSize.bind(this,t))})}removeToolsActiveClass(){this.canvasTools.forEach(t=>{t.classList.remove("active")})}clearCanvas(){this.resetTools(),this.ctx.clearRect(0,0,this.width,this.height)}manageCanvasActions(t){const e=this.toolsActions[this.currentTool];e&&this[e](t)}resetTools(){this.removeToolsActiveClass(),this.canvas.classList.remove(this.currentTool),this.currentTool=null,this.isPencilDrawStart=!1,this.pencilX=0,this.pencilY=0}setTool(t){this.removeToolsActiveClass(),t.classList.add("active");const{tool:e}=t.dataset;this.canvas.classList.remove(this.currentTool),this.currentTool=e,this.canvas.classList.add(this.currentTool)}manageKeyBindings(t){this.keyBindingsCodes.includes(t.code)&&document.querySelector(`[data-tool="${this.keyBindingsTools[t.code]}"]`).click()}fillArea(t){t.type===this.eventsTypes.mousedown&&(this.ctx.fillStyle=this.currentColor,this.ctx.fillRect(0,0,this.width,this.height),this.saveCanvasState())}chooseColor(t){if(t.type===this.eventsTypes.mousedown){const e=this.getPointedColor(t.clientX,t.clientY);this.setPrevColor(this.currentColor),this.currentColor=e,this.currenColorField.value=e,this.setCurrentIconColor(this.currenColorField,e)}}drawByPencil(t){const e=this.getPointerPosition(t.clientX,t.clientY);t.type===this.eventsTypes.mousedown?(this.isPencilDrawStart=!0,this.drawPixel(e),this.pencilX=e.x,this.pencilY=e.y,this.saveCanvasState()):t.type===this.eventsTypes.mousemove&&this.isPencilDrawStart?(this.drawLine(this.pencilX,this.pencilY,e.x,e.y),this.saveCanvasState()):t.type===this.eventsTypes.mouseup&&(this.isPencilDrawStart=!1)}drawLine(t,e,s,i){Math.abs(i-e)<Math.abs(s-t)?t>s?this.drawLineLow(s,i,t,e):this.drawLineLow(t,e,s,i):e>i?this.drawLineHigh(s,i,t,e):this.drawLineHigh(t,e,s,i),this.pencilX=s,this.pencilY=i}drawLineLow(t,e,s,i){const o=s-t;let n=i-e,r=1;n<0&&(r=-1,n=-n);let a=2*n-o,c=e;for(let e=t;e<=s;e+=1)this.drawPixel({x:e,y:c}),a>0&&(c+=r,a-=2*o),a+=2*n}drawLineHigh(t,e,s,i){let o=s-t;const n=i-e;let r=1;o<0&&(r=-1,o=-o);let a=2*o-n,c=t;for(let t=e;t<=i;t+=1)this.drawPixel({x:c,y:t}),a>0&&(c+=r,a-=2*n),a+=2*o}drawPixel(t){this.ctx.fillStyle=this.currentColor,this.ctx.fillRect(t.x*this.pixelSize,t.y*this.pixelSize,this.pixelSize,this.pixelSize)}getPointerPosition(t,e){const s=this.canvas.getBoundingClientRect();return{x:Math.floor((t-s.left)/this.pixelSize),y:Math.floor((e-s.top)/this.pixelSize)}}getPointedColor(t,e){const s=this.canvas.getBoundingClientRect(),o=t-s.left,n=e-s.top;let r=this.ctx.getImageData(o,n,1,1).data;return r=i.getColor(r)}changeCurrentColor(t){const e=t.target,s=e.value;this.setPrevColor(this.currentColor),this.currentColor=s,this.setCurrentIconColor(e,s)}setCurrentIconColor(t,e){t.closest(".tools_group__item").querySelector(".icon_color").style.backgroundColor=e}setPrevColor(t){this.prevColor=t,this.prevColorIcon.style.backgroundColor=t}setCurrentColor(t){const e=t.querySelector(".icon_color"),s=window.getComputedStyle(e).backgroundColor;this.currentColor=s,this.currenColorField.value=s,this.currentColorIcon.style.backgroundColor=s}drawImage(t){this.ctx.drawImage(t,0,0,this.width,this.height)}changeCanvasSize(t){const e=t.classList;e.contains("active")||(document.querySelector(".canvas_change.active").classList.remove("active"),e.add("active"),this.pixels=t.dataset.pixels,this.clearCanvas())}saveCanvasState(){const t={imageSrc:this.canvas.toDataURL(),pixels:this.pixels};localStorage.setItem(this.canvasId,JSON.stringify(t))}getCanvasState(){const t=localStorage.getItem(this.canvasId);if(t)try{const e=JSON.parse(t);this.pixels=e.pixels;const s=new Image;document.querySelectorAll(".canvas_change").forEach(t=>{t.dataset.pixels===this.pixels?t.classList.add("active"):t.classList.remove("active")}),s.src=e.imageSrc,s.onload=this.drawImage.bind(this,s)}catch(t){alert("Loading saving state was failed. An empty canvas will create.")}}init(){this.getCanvasState(),this.setEvents()}}document.addEventListener("DOMContentLoaded",(function(){new o("palette").init()}))},function(t,e){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,